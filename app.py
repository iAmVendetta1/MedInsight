from flask import Flask, request, jsonify
from MedModel import rf

app = Flask(__name__)

@app.route('/predict', methods=['POST'])
def predict():
    try:
        data = request.json
        if not data: 
            return jsonify({'error': 'No input data provided'}), 400

        print("Parsed JSON data:", data)

        symptoms_list = [
            data.get('Itching'),
            data.get('SkinRash'),
            data.get('NodalSkinEruptions', 0),
            data.get('ContinuousSneezing', 0),
            data.get('Shivering', 0),
            data.get('Chills', 0),
            data.get('JointPain', 0),
            data.get('StomachPain', 0),
            data.get('Acidity', 0),
            data.get('UlcersOnTongue', 0),
            data.get('MuscleWasting', 0),
            data.get('Vomiting', 0),
            data.get('BurningMicturition', 0),
            data.get('SpottingUrination', 0),
            data.get('Fatigue', 0),
            data.get('WeightGain', 0),
            data.get('Anxiety', 0),
            data.get('ColdHandsAndFeet', 0),
            data.get('MoodSwings', 0),
            data.get('WeightLoss', 0),
            data.get('Restlessness', 0),
            data.get('Lethargy', 0),
            data.get('PatchesInThroat', 0),
            data.get('IrregularSugarLevel', 0),
            data.get('Cough', 0),
            data.get('HighFever', 0),
            data.get('SunkenEyes', 0),
            data.get('Breathlessness', 0),
            data.get('Sweating', 0),
            data.get('Dehydration', 0),
            data.get('Indigestion', 0),
            data.get('Headache', 0),
            data.get('YellowishSkin', 0),
            data.get('DarkUrine', 0),
            data.get('Nausea', 0),
            data.get('LossOfAppetite', 0),
            data.get('PainBehindTheEyes', 0),
            data.get('BackPain', 0),
            data.get('Constipation', 0),
            data.get('AbdominalPain', 0),
            data.get('Diarrhea', 0),
            data.get('MildFever', 0),
            data.get('YellowUrine', 0),
            data.get('YellowingOfEyes', 0),
            data.get('AcuteLiverFailure', 0),
            data.get('SwellingOfStomach', 0),
            data.get('SwelledLymphNodes', 0),
            data.get('Malaise', 0),
            data.get('BlurredAndDistortedVision', 0),
            data.get('Phlegm', 0),
            data.get('ThroatIrritation', 0),
            data.get('RednessOfEyes', 0),
            data.get('SinusPressure', 0),
            data.get('RunnyNose', 0),
            data.get('Congestion', 0),
            data.get('ChestPain', 0),
            data.get('WeaknessInLimbs', 0),
            data.get('FastHeartRate', 0),
            data.get('PainDuringBowelMovements', 0),
            data.get('PainInAnalRegion', 0),
            data.get('BloodyStool', 0),
            data.get('IrritationInAnus', 0),
            data.get('NeckPain', 0),
            data.get('Dizziness', 0),
            data.get('Cramps', 0),
            data.get('Bruising', 0),
            data.get('Obesity', 0),
            data.get('SwollenLegs', 0),
            data.get('SwollenBloodVessels', 0),
            data.get('PuffyFaceAndEyes', 0),
            data.get('EnlargedThyroid', 0),
            data.get('BrittleNails', 0),
            data.get('SwollenExtremeties', 0),
            data.get('ExcessiveHunger', 0),
            data.get('ExtraMaritalContacts', 0),
            data.get('DryingAndTinglingLips', 0),
            data.get('SlurredSpeech', 0),
            data.get('KneePain', 0),
            data.get('HipJointPain', 0),
            data.get('MuscleWeakness', 0),
            data.get('StiffNeck', 0),
            data.get('SwellingJoints', 0),
            data.get('MovementStiffness', 0),
            data.get('SpinningMovements', 0),
            data.get('LossOfBalance', 0),
            data.get('Unsteadiness', 0),
            data.get('WeaknessOfOneBodySide', 0),
            data.get('LossOfSmell', 0),
            data.get('BladderDiscomfort', 0),
            data.get('FoulSmellOfUrine', 0),
            data.get('ContinuousFeelOfUrine', 0),
            data.get('PassageOfGases', 0),
            data.get('InternalItching', 0),
            data.get('ToxicLook_Typhos', 0),
            data.get('Depression', 0),
            data.get('Irritability', 0),
            data.get('MusclePain', 0),
            data.get('AlteredSensorium', 0),
            data.get('RedSpotsOverBody', 0),
            data.get('BellyPain', 0),
            data.get('AbnormalMenstruation', 0),
            data.get('DischromicPatches', 0),
            data.get('WateringFromEyes', 0),
            data.get('IncreasedAppetite', 0),
            data.get('Polyuria', 0),
            data.get('FamilyHistory', 0),
            data.get('MucoidSputum', 0),
            data.get('RustySputum', 0),
            data.get('LackOfConcentration', 0),
            data.get('VisualDisturbances', 0),
            data.get('ReceivingBloodTransfusion', 0),
            data.get('ReceivingUnsterileInjections', 0),
            data.get('Coma', 0),
            data.get('StomachBleeding', 0),
            data.get('DistentionOfAbdomen', 0),
            data.get('HistoryOfAlcoholConsumption', 0),
            data.get('fluid_overload', 0),
            data.get('BloodInSputum', 0),
            data.get('ProminentVeinsOnCalf', 0),
            data.get('Palpitations', 0),
            data.get('PainfulWalking', 0),
            data.get('PusFilledPimples', 0),
            data.get('Blackheads', 0),
            data.get('Scurring', 0),
            data.get('SkinPeeling', 0),
            data.get('SilverLikeDusting', 0),
            data.get('SmallDentsInNails', 0),
            data.get('InflammatoryNails', 0),
            data.get('Blister', 0),
            data.get('RedSoreAroundNose', 0),
            data.get('YellowCrustOoze', 0)
        ]
        prediction = rf.predict([symptoms_list])
        print(f'Prediction:', prediction)
        return jsonify({'prediction': prediction[0]})
    except Exception as e: 
        print(f"Error: {str(e)}")
        return jsonify({'error': str(e)}), 500

if __name__ == '__main__':
    app.run(debug=True, port=5000)
